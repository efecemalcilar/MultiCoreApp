// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiCoreApp.DataAccessLayer;

#nullable disable

namespace MultiCoreApp.DataAccessLayer.Migrations
{
    [DbContext(typeof(MultiDbContext))]
    [Migration("20220606073534_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MultiCoreApp.Core.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("060bfbf9-ebbe-4bbb-8559-db1276678a72"),
                            IsDeleted = false,
                            Name = "Kalemler"
                        },
                        new
                        {
                            Id = new Guid("bab90f9b-a655-4fe9-9a8c-a1b5d73088a2"),
                            IsDeleted = false,
                            Name = "Defterler"
                        });
                });

            modelBuilder.Entity("MultiCoreApp.Core.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblCustomers", (string)null);
                });

            modelBuilder.Entity("MultiCoreApp.Core.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("tblProducts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("47c50e32-410e-4801-bbc5-f239ebf02959"),
                            CategoryId = new Guid("060bfbf9-ebbe-4bbb-8559-db1276678a72"),
                            IsDeleted = false,
                            Name = "Dolma kalem",
                            Price = 122.53m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("fe86a00b-884f-4ca0-ae27-15d7879e2e17"),
                            CategoryId = new Guid("060bfbf9-ebbe-4bbb-8559-db1276678a72"),
                            IsDeleted = false,
                            Name = "Tukenmez kalem",
                            Price = 18.06m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("1a32af65-3614-48d9-9212-f1f3069d2305"),
                            CategoryId = new Guid("060bfbf9-ebbe-4bbb-8559-db1276678a72"),
                            IsDeleted = false,
                            Name = "Kursun Kalem",
                            Price = 62.19m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("475eb5dc-1abb-4888-a230-ccd3ae2054f2"),
                            CategoryId = new Guid("bab90f9b-a655-4fe9-9a8c-a1b5d73088a2"),
                            IsDeleted = false,
                            Name = "Çizgili Defter",
                            Price = 22.53m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("9b59052a-31cd-4095-a16b-0bfcbd63a9e0"),
                            CategoryId = new Guid("bab90f9b-a655-4fe9-9a8c-a1b5d73088a2"),
                            IsDeleted = false,
                            Name = "Kareli Defter",
                            Price = 28.06m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("49e992b1-9cd4-42a5-8eb2-6b6bea968249"),
                            CategoryId = new Guid("bab90f9b-a655-4fe9-9a8c-a1b5d73088a2"),
                            IsDeleted = false,
                            Name = "Dumduz defter",
                            Price = 12.19m,
                            Stock = 0
                        });
                });

            modelBuilder.Entity("MultiCoreApp.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MultiCoreApp.Core.Models.Product", b =>
                {
                    b.HasOne("MultiCoreApp.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MultiCoreApp.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
